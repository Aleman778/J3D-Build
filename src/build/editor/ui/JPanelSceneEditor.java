package build.editor.ui;

import build.editor.scene.SceneCanvas;
import build.editor.scene.SceneView;
import build.editor.scene.Universe;
import build.editor.scene.graph.SceneGraph;
import build.editor.scene.graph.SceneGraphNode;
import java.awt.BorderLayout;
import java.io.File;
import javax.media.j3d.Transform3D;
import javax.vecmath.Vector3f;

public class JPanelSceneEditor extends javax.swing.JPanel implements UIEditor {

    private final Universe universe;
    private final SceneCanvas canvas;
    private final SceneGraph graph;
    private final SceneGraphNode root;
    private final SceneView view;
    private final File file;
    
    /**
     * Creates new form JPanelSceneEditor
     * @param file the file to scene
     */
    public JPanelSceneEditor(File file) {
        initComponents();
        this.file = file;
        
        //Set up Scene
        canvas = new SceneCanvas(false);
        view = new SceneView();
        view.addCanvas3D(canvas);
        Transform3D transform = new Transform3D();
        transform.setTranslation(new Vector3f(0, 0, 8.0f));
        view.setTransform(transform);
        view.setCameraOutput(canvas);
        universe = new Universe();
        universe.addSceneView(view);
        view.setPickingCanvas(canvas, universe.getLocale());
        root = new SceneGraphNode("Universe");
        root.add(new SceneGraphNode("Locale"));
        graph = new SceneGraph(root, true);
        
        setLayout(new BorderLayout());
        add(canvas, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1004, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public SceneGraph getSceneGraph() {
        return graph;
    }
    
    @Override
    public void repaint() {
        super.repaint();
        if (view != null) {
            view.repaint();
        }
    }
    
    @Override
    public File getFile() {
        return file;
    }

    @Override
    public void save() {
    }

    @Override
    public void build() {
    }

    @Override
    public void export(File target, String type) {
    }
}
